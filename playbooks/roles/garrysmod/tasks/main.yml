- name: gmod user exists
  become: true
  user:
    home: /data/gmod
    name: gmod
    shell: /bin/bash
    groups:
      - "wheel"
    append: yes
  register: gmod_user

- name: gmod dependent directories exist
  become: true
  file:
    path: "{{ gmod_user.home }}/{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  loop:
    - "content"
    - "gmodds"
    - "Steam"
    - "content/css"
    - "{{ ansible_status_dir }}"
    - downloads

- name: steamcmd tarball downloaded
  become: true
  get_url: 
    url: "{{ steamcmd_tarball.url }}"
    dest: "{{ gmod_user.home }}/Steam/{{ steamcmd_tarball.dest_filename }}"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  register: steamcmd_downloaded_tar

- name: steamcmd tarball unarchived
  become: true
  unarchive:
    remote_src: yes
    src: "{{ steamcmd_downloaded_tar.dest }}"
    dest: "{{ steamcmd_downloaded_tar.dest | dirname }}"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"

- name: add correct allowed architecture to dpkg so we can download steamcmd pre-reqs
  become: true
  lineinfile:
    dest: /var/lib/dpkg/arch
    line: i386
    create: yes
  register: arch_i386

- name: apt cache is updated with new arch type
  become: true
  apt:
    update_cache: true
  when: arch_i386.changed

- name: steamserver dependencies are installed
  become: true
  apt: 
    name: "{{ item }}"
    state: present
  loop:
    - "lib32gcc-s1"
    - "lib32stdc++6"
    - "libncurses5"
    - "libncurses5:i386"
    - "unzip"

# We're using a hacky way of checking if these commands have been run, since they only need to be run once.
# This is idempotent maybe, but I don't want to figure it out for testing purposes.
- name: steamcmd is installed
  become: true
  shell:  
    chdir: "{{ gmod_user.home }}/Steam"
    cmd: "./steamcmd.sh +login anonymous +quit"
    creates: "{{ gmod_user.home }}/Steam/config"
  notify:
    - "fs:gmod_home:chown"

- name: dedicated server is installed
  become: true
  shell:  
    chdir: "{{ gmod_user.home }}/Steam"
    cmd: |
      ./steamcmd.sh +force_install_dir {{ gmod_user.home }}/gmodds +login anonymous  +app_update 4020 validate +quit
    creates: "{{ gmod_user.home }}/gmodds/garrysmod"
  notify:
    - "fs:gmod_home:chown"

- name: gmod addons downloaded
  become: true
  get_url: 
    url: "{{ item.url }}"
    dest: "{{ gmod_user.home }}/downloads/{{ item.name }}"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  loop: "{{ gmod_addons }}"
  register: gmod_addons

- name: gmod addons have dest folders
  become: true
  file:
    path: "{{ gmod_user.home }}/gmodds/garrysmod/addons/{{ item | basename }}"
    state: directory
    mode: "0755"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  loop: "{{ gmod_addons.results | map(attribute='dest') }}"
  register: gmod_addons_dest_folders
  notify:
    - "fs:gmod_home:chown"
  

- name: gmod addons extracted
  become: true
  unarchive:
    remote_src: yes
    src: "{{ item }}"
    dest: "{{ gmod_user.home }}/gmodds/garrysmod/addons/{{ item | basename }}"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  loop: "{{ gmod_addons.results | map(attribute='dest') }}"
  when: gmod_addons_dest_folders.changed
  notify:
    - "fs:gmod_home:chown"


- name: "settings: user roles are in place"
  become: true
  template:
    src: "users.txt.j2"
    dest: "{{ gmod_user.home }}/gmodds/garrysmod/settings/users.txt"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  notify:
    - "fs:gmod_home:chown"

- name: gmod service file in place
  become: true
  template:
    src: "gmod.service.j2"
    dest: "/lib/systemd/system/gmod.service"
  notify:
    - "service:gmod:restart"

- name: gmod server cfg in place
  become: true
  template:
    src: server.cfg.j2
    dest: "{{ gmod_user.home }}/gmodds/garrysmod/cfg/server.cfg"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  notify:
    - "service:gmod:restart"

- name: cstrike data downloaded from steamcmd
  become: true
  shell:
    chdir: "{{ gmod_user.home }}/Steam"
    cmd: |
      ./steamcmd.sh +force_install_dir "{{ gmod_user.home }}/content/css" +login anonymous +app_update 232330 validate +quit
    creates: "{{ gmod_user.home }}/content/css/cstrike"
  notify:
    - "fs:gmod_home:chown"

- name: cstrike data mounted to server properly
  become: true
  template:
    src: mount.cfg.j2
    dest: "{{ gmod_user.home }}/gmodds/garrysmod/cfg/mount.cfg"
    owner: "{{ gmod_user.name }}"
    group: "{{ gmod_user.name }}"
  notify:
    - "service:gmod:restart"